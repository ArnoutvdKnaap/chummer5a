<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>