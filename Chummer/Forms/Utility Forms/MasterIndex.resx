<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>