<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iXk1AAAAAElFTkSuQmCC
</value>
  </data>
</root>