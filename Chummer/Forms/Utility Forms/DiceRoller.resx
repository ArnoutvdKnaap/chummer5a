<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CswB1Ztb8P/HVYTDhBwh6wAAAABJRU5ErkJggg==
</value>
  </data>
</root>