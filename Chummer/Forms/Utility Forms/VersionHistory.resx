<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W30evJgDWhIAAAAASUVORK5CYII=
</value>
  </data>
</root>