<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>