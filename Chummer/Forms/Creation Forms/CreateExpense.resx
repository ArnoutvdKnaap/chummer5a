<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /h3bPwCAYccTQnHaVAAAAABJRU5ErkJggg==
</value>
  </data>
</root>