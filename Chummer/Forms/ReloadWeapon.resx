<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>