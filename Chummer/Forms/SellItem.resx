<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIADUAQAAJgAAACAgAAABACAA4AUAAPoBAACJUE5HDQoaCgAAAA1JSERSAAAAEAAA
        ABAIBgAAAB/z/2EAAAGbSURBVHgBhFIDbKZRELy7WKfYxtlmbduMa9u2bdtW1LB2Y5dxze2b1/zWl0y+
        yc7s7NMDIuIIrf5JwZU/KKjiB/6HqIlpT8Q0glegCU3BFT+uO5btqHfDiQrGDGD0Fmissa1sxoRr7Ut2
        BK9MgHXAy4iULg3qXnMkBIVU3U9h/0cRdX9QZ3CgjD5tglcmgH3PA8u/n9XMWnBj9qAuVuHHUJ43ok9d
        qw4ELaDs+xm8MgGATcCrsJimv3xay7wNBZR+O2ENnKOW0PafbAJehgn8MgFIDir/flw4bsgbUrs1WZMa
        56XTxhRY9v0YHoUBgGfyh0rsH4fVuWLPAR5e+5tcot9mwKMoANfViavyL/1G6b3arNEewHmw2leCxjy7
        CgNwxwPbzrguHBqfDID3rDtxDR6lAfGt/wkHGdXwR7ACcNSgqQ7o33LGNEwVBAhWAE15AA4vqUOdX1ds
        8z/hIYKjBg0eZdf4SYCAsm/8QQHg4prCAHHgxPs2nTjAZT1KAsJqfj30Lfy2hP0Cd8vpN91HvAEI76gj
        OVsZlzoAU/SOowWTn/0AAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAIAAAACAIBgAAAHN6evQA
        AAWnSURBVHgB1ZYDkBzdF8Vj23ayRmxrzR4uYtvYcZysEdvrjW3btpP//7N9vntfVbomzsznV/Wr7ul3
        znn33e63tbn+baNA5FQPaMzOUBkbQGlg6our2uQIjcklhzT53uPPpzE656iMDtZekaWlzMhpnuA13ldA
        6QGzW/3y4JPL+OK7p/jsm8f49JtHfKXfz5CQMQLKKOdo0uV9izevYrJj9Mpd0/H5t0+svSLr4SdXEG5x
        +4XXeF8BZTpG1DINjG8C4/rO0K/tCN2aDogStMPZuzugNjqCdEXf4i3aa3oTXHt0CJNJyx72cgZnDaLM
        ThG1TbzG+wooTDiqDW7/t6R5YVqmD6ame2NKuhcsaV2ResSAuPRhkCY6vd6FvKETHKJX7JiC9Yd1MKd2
        ZY/wcoZpXXeoJrve5myxxntGHqKcZ5fKkQPimmN2TgBmZvphBjE9w4dCu+L0rc3UBafXu0C7b4xLD/dR
        oV0wjbTsmZnlJzIGUlajblUiOFus8YFRkKirjnK/Y1rvhdkbAjEz25/wo914I/W4HjGpQ6y7QLt3jF62
        3YT1x3Sk8cIM0rKHvZyhmOB6hnR1RPZHjNxE6eJlCrYeFNcSsVuCMGcjh/ljVo4vhXfHiZtZcheYnrT7
        Cw+2Y3p2N9awVnjY2z+6GUqWL9SKdKVE9keO/ESN0LEue3WruiJmMxcRQHARPkg7EYXo1AEIGuNgDhzd
        wLx4q446MwkzaY41rGUPewNHOGVTVnWRaeMoTnj2ndUUiTuCEbuVQwMQvYne6yYvHL2RCknX4PuIqZ7f
        n723EbM3duc51rBWePrObspdcieKETaPvERVn0EOS3UruyBxezDitwQibgsX4kddmIRpq3pg7oYxSDs+
        ETGbfHmONUI7cWlH+JKXMqqILDtHUcI1zOj+Sfz2ACRsD0T8Nipimz9itnhjz8XF1Il1iN7ixc94TmhY
        S55P2Ssy7Bj5tCa3zfSnFyqDI7XaAaMXtqa28u6CCFpkqx8yT/G7H8f3/IznWMNa4VEZHaE1uyDc4rGZ
        M216/5MWBeL2//fi+vNduPZ0J87ez6LwACTvDBYk7Qzi3wzfy8/n7ZZYyx7hvfPJfoRZ3MCZthRQflBc
        M8zbR+G7fZG4y5eu/kjZHYiUPcF0fTs8x5qkXX7sEd75BwIRZnYHZ9pSQIWhSS2x7IgSSw5JWHzwJQos
        2i9hwd5QzNsT8goL9oVi0QGhkfXsXX5UhYgpnuBMmzogTXA9GG7xBEE7EEBr8sCguBZYROHz94dg/j6B
        uF98WIJK78Y6GfLS4g2hmOB20NYOFCdciPZEZyu8Bse3wNLDCtptKBbuF/C96JbG6I5yVYsoX/Nwhout
        30Ahtd5tq8bsCrXRWaAyOEOpd8aA2Ma0WCi1+FWWHQ2FFOXEOtbLaM1u0Brdt3KmTR2YuNAXF5+vx9nH
        q3HmJY+Ih2uw5HAIIVkRitRTA2h+Detkzj5ZjcsvUul12HEKBic0w6qTEu0sGEuPBBEM34dQByRCYQ09
        D+U5QtYL75pTCmjtOQUjUloh7YIW686qsfaMAGvOqLD6lAorTiiw/NirrKRna06rSMeoBevOqZF+UUsf
        o32n4LB8AkziBEBtcBenYO1pNVYeV8qsOqHCujMaKKLcoDF6sJ6QTwKfgsN/2ikYltQKqec01FolVp8U
        0L0K6Rc0YvHa7qV7/xmnIB8buGpunRUOXEDaeS11QcULC7gjGRfDRJea+1eXSFfZylOes0TmnzAqDE1s
        icxLWqw/y20X0L0a2VdEAegYVsfXhsVsL2B4cktkXQ6jLmj4VQi4IzlXw0UBHbR1/EiX/y8rYNS81th6
        uwc2Xo8kIgSbbkRi252e4oPrHFkv8K8sQJwO+rr5g5PhnfOzCEvDL0lT3f7/gOw/HUwnohFRhshtV7r9
        p0OmlGj/f2n8DvpiaPWNS5GJAAAAAElFTkSuQmCC
</value>
  </data>
</root>