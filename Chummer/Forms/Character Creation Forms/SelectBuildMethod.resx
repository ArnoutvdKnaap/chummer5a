<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dP/rsXD/67yG/+3u7v/qu4X/67Jw/+u0df/stXj/7bZ6/8WPMf/nwYL/7r1u/8OJGf+/rYf/t7e9/7e2
        t/94dnT/iYeF/42Kif+HhYP/ZmNixBYWFkcAAAAfAAAABwAAABXQjU//8djA//C5eP/vunz/77t+/++7
        fv/vu33/77l5/+/Ci//x8/T/7fLz/+jr6v/uv4n/8Ll5/++7ff/wvID/8r2D/8mTNP+ufhv/uK6Z/+7x
        +P/EwsP/t7Sz/8LAvv/Mysn/0tDP/9nY1v/T0dD/mZWU/zIxMFAAAAAQAAAADsyCO//249P/8tKw//LA
        gP/ywYP/8sGE//LAgf/ywIL/9vTw//P19f/v7+3/6uzr/+Xn5f/0wIL/88GC//LChP/zwoX/9sOF//nX
        tf+ooZ7/wcLF/+/v7/+9urn/trOy/8K/vv/Kx8f/0tDP/9vb2P/f3dz/eXZ1/wAAAA0AAAAEyoI7xd2p
        dv/47OH/9t/I//bOnP/3xYb/98eK//337v/9/P3//Pf0//j07v/08Ov/7u3p/+jg1f/5yIz/+MaI//bO
        nf/24Mn/++3i/+Wpb/99eXb/3t7d/7Gurf+2s7D/vry6/6mnp/94d3T/eXZ1/3t3dv96d3a3AAAABAAA
        AAAAAAAEz4dBwdqbXf/x28T/+vTx//ro0////PT/6fT7/6HH3P+Gtc3/fqzE/3SjvP9/p7z/usvT/+Xf
        0//76dX/+vXx//HbxP/cm1z/xXw0o3t/g//p6ej/qKWj/7GurP+7uLb/fnt6/wAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABx4ZES9eNRfjbmlf/78up//////+Zy+X/cK3O/2mlxP9blrT/SoOg/zhy
        kf9Dc47/5+vr/+nOsv/cmlj/141F+MmFQkgAAAAXfoGF//Dw8P+npKL/rKmn/7azsf+Bfn3/AAAAJwAA
        ABYAAAAVAAAADQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAcmKSDXbk0i975hA/52+xf9zrc3/X5Gs/1CA
        mf9Ec43/NGV//1tyd//3n0j/3pVJvcmKSDUAAAABAAAAAAAAABGDhIT/7e3r/7Ctq/+qp6X/sK2r/4SC
        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
</value>
  </data>
</root>