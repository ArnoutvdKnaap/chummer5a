<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIAB0AgAAJgAAACAgAAABACAAOwUAAJoCAACJUE5HDQoaCgAAAA1JSERSAAAAEAAA
        ABAIBgAAAB/z/2EAAAI7SURBVHgBdNIDrDRHAADgb2Z3715tO64Z17Ztu41qu41TO6iNqGZYW1Ft9+H+
        272d6ZY/35eMjXDiiSea0zHHHPNYSmm3nDMhzAw5828ICDE+XjK3EMJua6y5phwjVSWbKUDTkJKP3n9/
        t8jcyrKUcvbdb7/75c47jULQdqFLu/LdunopJRmxyzzWNHUeDod5MBjkX3/9NYMQVAstaKFDDyWQez2C
        rnywrl4OAZRNd9bDjjhSv9cHdV1LOROjsqwE5KpHVYFQ18r+mNDUoJwY6/tNdPsttwqx0A4GLj3rdCEE
        VSBDXfNvmlEFAqC8+5prFYsuZqdbbhIBr19wjhiCKiX5kUeEPff8dxLySy+p2lYBKCcx/7DRLLEUsVCM
        j2uLvlAUqhZ77EHOZiKkpChLUCa0P86Qi0WEUOguy+IPPemNbbalaQiEGOhFqkxoxZTEuvbH+PiL4Y9n
        N8wLrbkOv79OiLQtw5qmCymRE4tvZOqTt4VdP9M/61y/XXW5JdgIv5X+SIxVhOWBjJxm/jqZBRbXfr6w
        2FtMakdqdD/4DShTa3ziuVcXKrV6oRE15KRtk+EoGWWMfSb83hcWWkCanDIyU7noPm9tigL2O+Wy11fa
        /GTf/jpuULcePnEVGRn1MquyYF+c+F0yU9lt5W2Al39eyrrzDQzGZiiNQPg3FP3MIguKg8HsEzDTfMXQ
        I3ffq9u+iUHjrXU3MV5no8UWt9qXX8hd8O47wnQTvHbnqRsx0waPm9afgxUCADQzCz1AeVblAAAAAElF
        TkSuQmCCiVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAFAklEQVR4AaXVA4wsbRaH8d95
        q7p75tprW9EXrG3b5qcbrMON1rvB2rbtDde2beNqerpw9k6mU9npdCYXT1J+8Zx/qXZm1G9+85s/FNyt
        z5SZzpWIUCIkH3/Uox517zMVWMXdHvHIR2rbbi4Qzp4UEeq68pa3vOVuWD1TgZXM1Lat3//hD7YQEJRA
        EEEmkn6+TVu40hWvKDNh5UwFopSizxRRhighS2E0kpMVxiNKoe+ZNWJ9StOIvgeZCYbbSNTOkFKKyFBV
        lYFS5Mqq+Pvf7Lz0EuPPfY45s9vf3smXvVwePiKma/S9gTRQY3ThhRf+vW3bvZlpkczUNA3ISKUEEMFk
        wr/+bs/1rkumfjIZEhidltl3+vyxn/2UAwdZXycTiK0COzcmf9KTLpSZSikWOX3dzzYGQkRhqH6HHRc+
        kEy5ukopRGxeK0WsrZ2+fpFTH/mYaFr63iI1xjK1Xec5z3me0agWEVsSmM0aD3nw/cGQQLUhMFZ//vNy
        PKaqDERQVXK8eb2sjMWpglwqQNB1nV27dhmPR0sEZkPlURUSVaEMaVjCcD5KmfdLgszcKtBH0fZpsmPV
        aDQSw4Bkn5vVIISiIhJFmrMY7cL5glCIRAixVeDkyorj9Ui7dy+jsSjBINDrp1NdKZRQVSETgb7X3eEO
        ymc/S1XZWAa6jtnMxvWq7wmUEBEWH0LveOlLlUOH3O3FLxQRlLK1ikyve9/7KEUpRWYSwWwm3/AGrnQl
        1tYYjQwfoqYBG9fLbMZ83IgQsZDAKUxK0ezezXhMBHOi742OHdtMgC2dNQ2Xvaz+j39UHvMYPvMZA3e8
        o/6NbxRHjmzKwXzysJBAh2wauWMHo5pYSKBpzKseEhhYX+fwYT79aYuUptm8Dv9fwGICYNaJ8eqmwEIC
        MWlJKlRVjVz8UND3RBjIpO8phVIMRKhKWRQg/9PSrpCDwJCA7GRXK5hMVqTtEQiLiEyBmCc5CJTPXWBy
        /eNckkS/0DvpKtf/7be88g1J37JUIUmUFKPCaqFCJl2noGoa1Xz/+PHjX0TW4L8d6x3tKqol+hO3utL7
        Ty/vQlpOomf/Tcx+/FV5l58jkCYvfalTR4/ayV3QoMU/MK1Bl5Se8VxgKYm0PR31xKzaKap97A6amapU
        psCv8W8kplirzbES9Ktkcc5Ez6SSCuMxoyDIZqbFfPK/LfkXBDuCaveZVZyQ5JIHb1dQh6gLJagq1tZ0
        llMj//Kf7os+9dWbSQKj0hrHTGSL3gD6Lq23vbZLaYAIxiOx57fiqx0rNTUiWV+X2whMr/2E7z8Jh4ZE
        GF3p4R/45FMec0ef+86flUIIfaZT653PPfM6mkU1BJqyh4N7Wa2IJAtr020F1vA7/A0B2L+//q+VPGbv
        +IQqiAhdn0rXAm1HnwaqSlYhdmBHzagiE5htn0CL4/NlYGyq71ujkvMEUpHq0iOFXkgDAhV12VxKIXNT
        bPsEliM7TZ/qKpRgmKKE7YiqYr7IJELZPgHL6XtNl0oZBBgEYv5bNTAclGJYMoHpVH+2Atn3uqSuK6SA
        kqqqAmG5gLqmqja3mWTK2ezsEyhSltpkZQwCXaYmW1CqSsEiOZmwscxFZara/qwFsp0e++L73vrum+kT
        yVzgxFrrWzf6t41tt/AW9AcOuNpvfys3Fgbim9/0N76IPFOB6bff/6zFb8PABR91tgw/nzMVWPw2nC/D
        z8cC/wMZElGRI8nW4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>